{"version":3,"sources":["AppBarComponent/index.js","ImageContainer/index.js","FooterComponent/index.js","AboutContainer/index.js","App.js","serviceWorker.js","index.js"],"names":["NavbarPage","state","isOpen","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","onClick","this","id","navbar","left","active","right","waves","Component","MasksPage","lg","md","src","alt","React","FooterPage","fluid","size","gradient","href","fab","icon","Date","getFullYear","library","add","faIgloo","App","AppBarComponent","ImageContainer","Divider_default","FooterComponent","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mNA8CeA,6MAvCfC,MAAQ,CACNC,QAAQ,KAGVC,eAAiB,WACfC,EAAKC,SAAS,CAAEH,QAASE,EAAKH,MAAMC,kFAIpC,OACII,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAQC,MAAI,EAACC,OAAO,MACnCN,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAAA,UAAQK,UAAU,cAAlB,gCAEFP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAkBK,QAASC,KAAKZ,iBAChCG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaO,GAAG,kBAAkBd,OAAQa,KAAKd,MAAMC,OAAQe,QAAM,GACjEX,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcS,MAAI,GAChBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYU,QAAM,IAElBb,EAAAC,EAAAC,cAACC,EAAA,EAAD,OAGFH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcW,OAAK,GACjBd,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAeY,OAAK,GAClBf,EAAAC,EAAAC,cAAA,OAAKK,UAAU,gBACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACRH,EAAAC,EAAAC,cAAA,UAAQK,UAAU,cAAlB,gCA5BeS,aC6BVC,mLA9BX,OACEjB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcI,UAAU,QACtBP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,GAAG,IAAIC,GAAG,KAAKZ,UAAU,QAC/BP,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,kCAAkCb,UAAU,sBAAsBc,IAAI,MAEjFrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,GAAG,IAAIC,GAAG,IAAIZ,UAAU,QAC9BP,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,kCAAkCb,UAAU,2BACnDc,IAAI,MAERrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,GAAG,IAAIC,GAAG,IAAIZ,UAAU,QAC9BP,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,kCAAkCb,UAAU,sBAAsBc,IAAI,OAGnFrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,GAAG,IAAIC,GAAG,KAAKZ,UAAU,QAC/BP,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,kCAAkCb,UAAU,sBAAsBc,IAAI,MAEjFrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,GAAG,IAAIC,GAAG,IAAIZ,UAAU,QAC9BP,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,kCAAkCb,UAAU,sBAAsBc,IAAI,MAEjFrB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQe,GAAG,IAAIC,GAAG,IAAIZ,UAAU,QAC9BP,EAAAC,EAAAC,cAAA,OAAKkB,IAAI,kCAAkCb,UAAU,sBAAsBc,IAAI,eAxBnEC,IAAMN,WCsCfO,GCtCcP,YDAV,WACjB,OACEhB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAWC,MAAM,QAAQG,UAAU,wBACjCP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcqB,OAAK,EAACjB,UAAU,4BAC5BP,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,GAAG,KACTnB,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAAQP,EAAAC,EAAAC,cAAA,6BACtBF,EAAAC,EAAAC,cAAA,2BAGAF,EAAAC,EAAAC,cAAA,gCACsBF,EAAAC,EAAAC,cAAA,WADtB,uBAIDF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,GAAG,KACVnB,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAAQP,EAAAC,EAAAC,cAAA,8BACtBF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,oCADF,uBAGAF,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,yBADF,wBAIFF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQgB,GAAG,KACTnB,EAAAC,EAAAC,cAAA,MAAIK,UAAU,SAAQP,EAAAC,EAAAC,cAAA,sCACtBF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQsB,KAAK,KAAKC,SAAS,SAASzB,GAAC,EAAC0B,KAAK,6CAA4C3B,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASyB,KAAG,EAACC,KAAK,WAAWJ,KAAK,WAI/HzB,EAAAC,EAAAC,cAAA,OAAKK,UAAU,qCACbP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAcqB,OAAK,GAAnB,SACU,IAAIM,MAAOC,cADrB,eAC+C/B,EAAAC,EAAAC,cAAA,KAAGyB,KAAK,+BAAR,6EEtBvDK,IAAQC,IAAIC,SA2BGC,mLAvBX,OACEnC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,WACbP,EAAAC,EAAAC,cAACkC,EAAD,MAEEpC,EAAAC,EAAAC,cAAA,OAAKK,UAAU,kBACbP,EAAAC,EAAAC,cAAA,OAAKK,UAAU,OAAOa,IAAI,sCAKxBpB,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,MACAD,EAAAC,EAAAC,cAACqC,EAAD,cAlBEvB,qBCFEwB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,gFCRNC,IAASC,OACR9C,EAAAC,EAAAC,cAAC6C,EAAA,EAAD,KACC/C,EAAAC,EAAAC,cAAC8C,EAAD,OAEDC,SAASC,eAAe,SDmHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.5e43f25b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\nMDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline,\nMDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem\n} from \"mdbreact\";\n\nclass NavbarPage extends Component {\nstate = {\n  isOpen: false\n};\n\ntoggleCollapse = () => {\n  this.setState({ isOpen: !this.state.isOpen });\n}\n\nrender() {\n  return (\n      <MDBNavbar color=\"black\" dark expand=\"md\">\n        <MDBNavbarBrand>\n          <strong className=\"white-text\">316 Campbell St, Geneva, IL</strong>\n        </MDBNavbarBrand>\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\n          <MDBNavbarNav left>\n            <MDBNavItem active>\n            </MDBNavItem>\n            <MDBNavItem>\n            </MDBNavItem>\n          </MDBNavbarNav>\n          <MDBNavbarNav right>\n            <MDBNavItem>\n              <MDBFormInline waves>\n                <div className=\"md-form my-0\">\n                  <MDBNavbarBrand>\n          <strong className=\"white-text\">(630) 232-1172</strong>\n        </MDBNavbarBrand>\n                </div>\n              </MDBFormInline>\n            </MDBNavItem>\n          </MDBNavbarNav>\n        </MDBCollapse>\n      </MDBNavbar>\n    );\n  }\n}\n\nexport default NavbarPage;","import React from \"react\";\nimport { MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\n\nclass MasksPage extends React.Component {\n  render() {\n    return (\n      <MDBContainer className=\"mt-5\">\n        <MDBRow>\n          <MDBCol lg=\"4\" md=\"12\" className=\"mb-4\">\n            <img src=\"https://i.imgur.com/GtzPbKm.jpg\" className=\"img-fluid z-depth-1\" alt=\"\" />\n          </MDBCol>\n          <MDBCol lg=\"4\" md=\"6\" className=\"mb-4\">\n            <img src=\"https://i.imgur.com/E3Gq7q4.jpg\" className=\"img-fluid z-depth-1-half\"\n              alt=\"\" />\n          </MDBCol>\n          <MDBCol lg=\"4\" md=\"6\" className=\"mb-4\">\n            <img src=\"https://i.imgur.com/1JIHt7n.jpg\" className=\"img-fluid z-depth-2\" alt=\"\" />\n          </MDBCol>\n        </MDBRow>\n        <MDBRow>\n          <MDBCol lg=\"4\" md=\"12\" className=\"mb-4\">\n            <img src=\"https://i.imgur.com/8J3TKFn.jpg\" className=\"img-fluid z-depth-3\" alt=\"\" />\n          </MDBCol>\n          <MDBCol lg=\"4\" md=\"6\" className=\"mb-4\">\n            <img src=\"https://i.imgur.com/I5xWjAb.jpg\" className=\"img-fluid z-depth-4\" alt=\"\" />\n          </MDBCol>\n          <MDBCol lg=\"4\" md=\"6\" className=\"mb-4\">\n            <img src=\"https://i.imgur.com/CnFih1D.jpg\" className=\"img-fluid z-depth-5\" alt=\"\" />\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n    );\n  }\n}\n\nexport default MasksPage;","import React from \"react\";\nimport { MDBBtn, MDBCol, MDBContainer, MDBRow, MDBFooter, MDBIcon } from \"mdbreact\";\n\nconst FooterPage = () => {\n  return (\n    <MDBFooter color=\"black\" className=\"font-small pt-4 mt-4\">\n      <MDBContainer fluid className=\"text-center text-md-left\">\n        <MDBRow>\n          <MDBCol md=\"4\">\n            <h4 className=\"title\"><strong>Contact Us</strong></h4>\n            <p>\n              (630) 232 1172\n            </p>\n            <p>\n              316 Campbell Street,<br/> Geneva, IL, 60134\n            </p>\n          </MDBCol>\n           <MDBCol md=\"4\">\n            <h4 className=\"title\"><strong>Store hours</strong></h4>\n            <p>\n              <strong>Monday - Saturday:</strong> 10:00 am - 5:00 pm\n            </p>\n            <p>\n              <strong>Sunday:</strong> 12:00 pm - 4:00 pm\n            </p>\n          </MDBCol>\n          <MDBCol md=\"4\">\n            <h4 className=\"title\"><strong>Like us on Facebook</strong></h4>\n            <MDBBtn size=\"md\" gradient=\"indigo\" a href=\"https://www.facebook.com/CountryNaturals/\"><MDBIcon fab icon=\"facebook\" size=\"5x\" /></MDBBtn>\n          </MDBCol>\n        </MDBRow>\n      </MDBContainer>\n      <div className=\"footer-copyright text-center py-3\">\n        <MDBContainer fluid>\n          &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.MDBootstrap.com\"> MDBootstrap.com </a>\n        </MDBContainer>\n      </div>\n    </MDBFooter>\n  );\n}\n\nexport default FooterPage;","import React, { Component } from 'react';\n\n\nclass AboutContainer extends Component {\n    render(){\n        return(\n            <h1>About page </h1>\n        )\n    }\n}\nexport default AboutContainer;\n","import React, { Component } from 'react';\nimport AppBarComponent from './AppBarComponent'\nimport ImageContainer from './ImageContainer'\nimport {Route, Switch} from 'react-router-dom'\nimport AboutContainer from './AboutContainer'\nimport FooterComponent from './FooterComponent'\nimport Divider from '@material-ui/core/Divider';\nimport './App.css';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faIgloo } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faIgloo)\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"topPart\">\n          <AppBarComponent />\n          \n            <div className=\"welcomePageDiv\">\n              <img className=\"logo\" src=\"https://i.imgur.com/ZABKfFN.png\" />\n            </div>\n        </div>\n         \n\n                <ImageContainer />\n                <br/>\n                <br/>\n                <br/>\n                <Divider />\n                <FooterComponent/>\n            \n            </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom'\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n\t<BrowserRouter> \n\t\t<App /> \n\t</BrowserRouter>, \n\tdocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}